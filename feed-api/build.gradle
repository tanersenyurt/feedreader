plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.sonarqube" version "3.3"
    id 'java'
}


group = 'com.tsenyurt.csdm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':feed-service')
    implementation project(':graphql-service')

    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    implementation 'org.projectlombok:lombok:1.18.16'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.3'
    implementation("com.google.guava:guava:30.1.1-jre")

    //https://stackoverflow.com/questions/2729027/java-library-for-reading-rss-and-atom-feeds
    // https://mvnrepository.com/artifact/com.rometools/rome
    implementation group: 'com.rometools', name: 'rome', version: '1.16.0'


    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:11.0.0'
    implementation 'com.graphql-java-kickstart:graphiql-spring-boot-starter:11.0.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", "tanersenyurt_feedreader"
        property "sonar.organization", "tanersenyurt"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}
